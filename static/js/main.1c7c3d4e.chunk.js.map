{"version":3,"sources":["../../src/styles.tsx","../../src/Form.tsx","../../src/Heading.tsx","../../src/FirstName.tsx","../../src/LastName.tsx","../../src/Email.tsx","../../src/Message.tsx","../../src/SubmitButton.tsx","components/helpers/fontFunctions.tsx","components/Fonts.tsx","components/helpers/rangeFunctions.tsx","components/RangeComponent.tsx","components/Title.tsx","components/helpers/colorfunctions.tsx","components/colorComponents.tsx","components/codeSnippet.tsx","components/ButtonTitle.tsx","components/options.tsx","App.tsx","index.tsx"],"names":["StyledHeading","styled","props","StyledInput","StyledMessageInput","StyledLabel","StyledButton","StyledForm","defaultTheme","primaryColor","primaryFont","buttonLetterSpacing","buttonPadding","buttonBackgroundColor","buttonFontColor","headingBackgroundColor","headingBorderRadius","headingSize","headingColor","inputBackgroundColor","inputBorderRadius","inputBorderWeight","inputBorderColor","formPadding","formBorderRadius","formBorderWeight","formBorderColor","backgroundColor","title","fontWeight","width","headingBorderBottom","headingBorderColor","messageInputHeight","buttonHoverColor","Heading","className","React","FirstName","useFormContext","errors","name","ref","register","required","LastName","Email","pattern","value","message","Message","minLength","SubmitButton","buttonTitle","type","theme","methods","useForm","Object","onSubmit","data","console","setTheme","fonts","Fonts","onChange","event","target","fontFunctions","sort","map","font","key","toUpperCase","slice","measureUnit","RangeComponent","min","max","rangeName","e","currentTarget","helperFunctions","handleChange","Title","setTitle","placeholder","ColorComponent","colorName","colorFunctions","CodeSnippet","useEffect","Prism","highlightAll","string","keys","reduce","a","b","trim","propTitle","propButtonTitle","codeOutput","ButtonTitle","setButtonTitle","OptionForm","role","App","useState","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c7c3d4e.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledHeading = styled.h1`\n  font-weight: ${(props: any) => props.theme.fontWeight};\n  color: ${(props: any) => props.theme.headingColor};\n  text-align: center;\n  padding-bottom: 10px;\n  border-bottom: ${(props: any) => props.theme.headingBorderBottom} solid\n    ${(props: any) => props.theme.headingBorderColor};\n  font-family: ${(props: any) => props.theme.primaryFont};\n  font-size: ${(props: any) => props.theme.headingSize};\n  background-color: ${(props: any) => props.theme.headingBackgroundColor};\n  border-radius: ${(props: any) => props.theme.headingBorderRadius};\n  display: flex;\n  justify-content: center;\n`\n\nexport const StyledInput = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.inputBorderRadius};\n  border: ${(props: any) => props.theme.inputBorderWeight} solid\n    ${(props: any) => props.theme.inputBorderColor};\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  height: 40px;\n  background-color: ${(props: any) => props.theme.inputBackgroundColor};\n`\n\nexport const StyledMessageInput = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.inputBorderRadius};\n  border: ${(props: any) => props.theme.inputBorderWeight} solid\n    ${(props: any) => props.theme.inputBorderColor};\n  padding: 10x 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  background-color: ${(props: any) => props.theme.inputBackgroundColor};\n  height: ${(props: any) => props.theme.messageInputHeight};\n`\n\nexport const StyledLabel = styled.label`\n  line-height: 2;\n  text-align: left;\n  display: block;\n  margin-bottom: 13px;\n  margin-top: 20px;\n  color: ${(props: any) => props.theme.primaryColor};\n  font-size: 14px;\n  font-weight: 200;\n  font-family: ${(props: any) => props.theme.primaryFont};\n`\nexport const StyledButton = styled.button`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.inputBorderRadius};\n  border: ${(props: any) => props.theme.inputBorder};\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  background: grey;\n  font-family: ${(props: any) => props.theme.primaryFont};\n  text-align: center;\n  background-color: ${(props: any) => props.theme.buttonBackgroundColor};\n  color: ${(props: any) => props.theme.buttonFontColor};\n  text-transform: uppercase;\n  border: none;\n  margin-top: 30px;\n  padding: ${(props: any) => props.theme.buttonPadding};\n  font-size: 20px;\n  font-weight: ${(props: any) => props.theme.fontWeight};\n  display: flex;\n  justify-content: center;\n  letter-spacing: ${(props: any) => props.theme.buttonLetterSpacing};\n  margin-right: ${(props: any) => '-' + props.theme.buttonLetterSpacing};\n  &:hover {\n    background: ${(props: any) => props.theme.buttonHoverColor};\n  }\n  &:active {\n    transition: 0.3s all;\n    transform: translateY(5px);\n    border: 1px solid transparent;\n    opacity: 0.8;\n  }\n`\n\nexport const StyledForm = styled.form`\n  width: ${(props: any) => props.theme.width};\n  margin: auto;\n  margin-top: 1em;\n  border: ${(props: any) => props.theme.formBorderWeight} solid\n    ${(props: any) => props.theme.formBorderColor};\n  color: ${(props: any) => props.theme.primaryColor};\n  background-color: ${(props: any) => props.theme.backgroundColor};\n  padding: ${(props: any) => props.theme.formPadding};\n  border-radius: ${(props: any) => props.theme.formBorderRadius};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n","import * as React from 'react'\nimport { useForm, FormProvider } from 'react-hook-form'\nimport { ThemeProvider } from 'styled-components'\nimport { StyledForm } from './styles'\n\nexport interface Theme {\n  primaryColor?: string\n  primaryFont?: string\n  inputBorderRadius?: string\n  inputBorder?: string\n  inputBackgroundColor?: string\n  width?: string\n  fontWeight?: string\n  buttonFontColor?: string\n  headingColor?: string\n  headingSize?: string\n  backgroundColor?: string\n  buttonBackgroundColor?: string\n  formPadding?: string\n  formBorderRadius?: string\n  headingBackgroundColor?: string\n  headingBorderRadius?: string\n  buttonPadding?: string\n  buttonLetterSpacing?: string\n  headingBorderBottom?: string\n  messageInputHeight?: string\n  buttonHoverColor?: string\n}\n\nexport interface formProps {\n  children?: JSX.Element[] | JSX.Element\n  theme: Theme\n}\n\nconst defaultTheme = {\n  primaryColor: 'black',\n  primaryFont: 'Courier New',\n  buttonLetterSpacing: '20px',\n  buttonPadding: '20px',\n  buttonBackgroundColor: 'black',\n  buttonFontColor: 'white',\n  headingBackgroundColor: '#fbf8f5',\n  headingBorderRadius: '',\n  headingSize: '30px',\n  headingColor: 'black',\n  inputBackgroundColor: 'white',\n  inputBorderRadius: '15px',\n  inputBorderWeight: '2px',\n  inputBorderColor: 'grey',\n  formPadding: '20px',\n  formBorderRadius: '35px',\n  formBorderWeight: '1px',\n  formBorderColor: 'grey',\n  backgroundColor: '#fbf8f5',\n  title: 'bonjour',\n  fontWeight: '200',\n  width: '325px',\n  headingBorderBottom: '2px',\n  headingBorderColor: 'black',\n  messageInputHeight: '70px',\n  buttonHoverColor: 'grey'\n}\n\nfunction Form({ children, theme }: formProps) {\n  const methods = useForm()\n  const onSubmit = (data: Object) => console.log(data)\n\n  Object.assign(defaultTheme, theme)\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <FormProvider {...methods}>\n        <StyledForm className='App' onSubmit={methods.handleSubmit(onSubmit)}>\n          {children}\n        </StyledForm>\n      </FormProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default Form\n","import * as React from 'react'\nimport { StyledHeading } from './styles'\nimport './styles.css'\n\ninterface headingProps {\n  title: string\n}\n\nfunction Heading({ title }: headingProps) {\n  return (\n    <div className='heading_wrapper'>\n      <StyledHeading> {title || 'Get in touch!'}</StyledHeading>\n    </div>\n  )\n}\n\nexport default Heading\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  firstName: string\n}\n\nfunction FirstName() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='first_name_wrapper'>\n      <StyledLabel>First Name</StyledLabel>\n      <StyledInput name='firstName' ref={register({ required: true })} />\n      {errors.firstName && <p>This field is required</p>}\n    </div>\n  )\n}\n\nexport default FirstName\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  lastName: string\n}\n\nfunction LastName() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='last_name_wrapper'>\n      <StyledLabel>Last Name</StyledLabel>\n      <StyledInput name='lastName' ref={register({ required: true })} />\n      {errors.lastName && <p>This field is required</p>}\n    </div>\n  )\n}\n\nexport default LastName\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  email: string\n}\n\nfunction Email() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='email_wrapper'>\n      <StyledLabel>Email Address</StyledLabel>\n      <StyledInput\n        name='email'\n        ref={register({\n          required: true,\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: 'Invalid email address, please try again!'\n          }\n        })}\n      />\n      {errors.email && errors.email.message}\n      {errors.email && errors.email.type === 'required' && (\n        <p>This field is required</p>\n      )}\n    </div>\n  )\n}\n\nexport default Email\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledMessageInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  message: string\n}\n\nfunction Message() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='message_wrapper'>\n      <StyledLabel>Message</StyledLabel>\n      <StyledMessageInput\n        name='message'\n        className='message_input'\n        ref={register({ required: true, minLength: 55 })}\n      />\n      {errors.message && errors.message.type === 'required' && (\n        <p>This field is required</p>\n      )}\n      {errors.message && errors.message.type === 'minLength' && (\n        <p>More characters needed!</p>\n      )}\n    </div>\n  )\n}\n\nexport default Message\n","import * as React from 'react'\nimport { StyledButton } from './styles'\nimport './styles.css'\n\ninterface submitButtonProps {\n  buttonTitle: string\n}\n\nfunction SubmitButton({ buttonTitle }: submitButtonProps) {\n  return (\n    <div className='buttonTitle_wrapper'>\n      <StyledButton type='submit'>{buttonTitle || 'Submit'}</StyledButton>\n    </div>\n  )\n}\n\nexport default SubmitButton\n","type fontFunctionProps = {\n  value: string\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n}\n\nfunction primaryFont({ value, setTheme }: fontFunctionProps) {\n  const primaryFont = value\n  setTheme((theme) => ({ ...theme, primaryFont }))\n}\n\nexport default {\n  primaryFont\n}\n","import React, { ChangeEvent } from 'react'\nimport fontFunctions from './helpers/fontFunctions'\n\ntype OptionProps = {\n  setTheme?: any\n}\n\nconst fonts: string[] = [\n  'Chivo',\n  'Arial',\n  'Helvetica',\n  'Verdana',\n  'Trebuchet MS',\n  'Gill Sans',\n  'Noto Sans',\n  'Avantgarde',\n  'Optima',\n  'Arial Narrow',\n  'sans-serif',\n  'Times',\n  'Times New Roman',\n  'Didot',\n  'Georgia',\n  'Palatino',\n  'Bookman',\n  'New Century Schoolbook',\n  'American Typewriter',\n  'serif',\n  'Andale Mono',\n  'Courier New',\n  'Courier',\n  'FreeMono',\n  'OCR A Std',\n  'DejaVu Sans Mono',\n  'monospace',\n  'Comic Sans MS',\n  'Apple Chancery',\n  'Bradley Hand',\n  'Brush Script MT',\n  'Snell Roundhand',\n  'URW Chancery L',\n  'cursive',\n  'Impact',\n  'Luminari',\n  'Chalkduster',\n  'Jazz LET',\n  'Blippo',\n  'Stencil Std',\n  'Marker Felt',\n  'Trattatello',\n  'fantasy'\n]\n\nconst Fonts = ({ setTheme }: OptionProps) => {\n  const handleThemeChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value\n    fontFunctions.primaryFont({ value, setTheme })\n  }\n\n  return (\n    <select onChange={handleThemeChange}>\n      <option>Select a Font!</option>\n      {fonts.sort().map((font) => (\n        <option key={font} value={font}>\n          {font[0].toUpperCase() + font.slice(1)}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nexport default Fonts\n","type rangeFunctionProps = {\n  value: string\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n  measureUnit?: string\n}\n\nfunction fontWeight({ value, setTheme }: rangeFunctionProps) {\n  const fontWeight = value\n  setTheme((theme) => ({ ...theme, fontWeight }))\n}\n\nfunction width({ value, setTheme, measureUnit }: rangeFunctionProps) {\n  const width = value + measureUnit\n  setTheme((theme) => ({ ...theme, width }))\n}\n\nfunction formPadding({ value, setTheme, measureUnit }: rangeFunctionProps) {\n  const formPadding = value + measureUnit\n  setTheme((theme) => ({ ...theme, formPadding }))\n}\n\nfunction formBorderWeight({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const formBorderWeight = value + measureUnit\n  setTheme((theme) => ({ ...theme, formBorderWeight }))\n}\n\nfunction formBorderRadius({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const formBorderRadius = value + measureUnit\n  setTheme((theme) => ({ ...theme, formBorderRadius }))\n}\n\nfunction headingBorderRadius({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const headingBorderRadius = value + measureUnit\n  setTheme((theme) => ({ ...theme, headingBorderRadius }))\n}\n\nfunction headingBorderBottom({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const headingBorderBottom = value + measureUnit\n  setTheme((theme) => ({ ...theme, headingBorderBottom }))\n}\n\nfunction headingSize({ value, setTheme, measureUnit }: rangeFunctionProps) {\n  const headingSize = value + measureUnit\n  setTheme((theme) => ({ ...theme, headingSize }))\n}\n\nfunction inputBorderRadius({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const inputBorderRadius = value + measureUnit\n  setTheme((theme) => ({ ...theme, inputBorderRadius }))\n}\n\nfunction inputBorderWeight({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const inputBorderWeight = value + measureUnit\n  setTheme((theme) => ({ ...theme, inputBorderWeight }))\n}\n\nfunction messageInputHeight({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const messageInputHeight = value + measureUnit\n  setTheme((theme) => ({ ...theme, messageInputHeight }))\n}\n\nfunction buttonPadding({ value, setTheme, measureUnit }: rangeFunctionProps) {\n  const buttonPadding = value + measureUnit\n  setTheme((theme) => ({ ...theme, buttonPadding }))\n}\n\nfunction buttonLetterSpacing({\n  value,\n  setTheme,\n  measureUnit\n}: rangeFunctionProps) {\n  const buttonLetterSpacing = value + measureUnit\n  setTheme((theme) => ({ ...theme, buttonLetterSpacing }))\n}\n\nexport default {\n  fontWeight,\n  width,\n  formPadding,\n  formBorderRadius,\n  headingBorderRadius,\n  inputBorderRadius,\n  messageInputHeight,\n  buttonPadding,\n  buttonLetterSpacing,\n  headingSize,\n  formBorderWeight,\n  headingBorderBottom,\n  inputBorderWeight\n}\n","import React, { FormEventHandler } from 'react'\nimport helperFunctions from './helpers/rangeFunctions'\n\ntype RangeComponents = {\n  min: number\n  max: number\n  rangeName: string\n  measureUnit: string\n  name: string\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n}\n\nconst RangeComponent = ({\n  min,\n  max,\n  rangeName,\n  name,\n  setTheme,\n  measureUnit\n}: RangeComponents) => {\n  const handleChange: FormEventHandler<HTMLInputElement> = (event) => {\n    const name = event.currentTarget.name\n    const value = event.currentTarget.value\n    helperFunctions[name]({ value, setTheme, measureUnit })\n  }\n\n  return (\n    <div className='range'>\n      <p>{rangeName}</p>\n      <input\n        type='range'\n        min={min}\n        max={max}\n        name={name}\n        onChange={(e) => handleChange(e)}\n      />\n      {/* <p> {`${value} ${measureUnit}`}</p> */}\n    </div>\n  )\n}\n\nexport default RangeComponent\n","import React, { FormEventHandler } from 'react'\n\ntype TitleProps = {\n  setTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst Title = ({ setTitle }: TitleProps) => {\n  const handleFontChange: FormEventHandler<HTMLInputElement> = (event) => {\n    const value = event.currentTarget.value\n    setTitle(`${value}`)\n  }\n  return (\n    <div className='heading'>\n      <input\n        placeholder='Type your title here!'\n        type='text'\n        onChange={handleFontChange}\n      />\n    </div>\n  )\n}\n\nexport default Title\n","type colorFunctionProps = {\n  value: string\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n}\n\nfunction primaryColor({ value, setTheme }: colorFunctionProps) {\n  const primaryColor = value\n  setTheme((theme) => ({ ...theme, primaryColor }))\n}\n\nfunction formBorderColor({ value, setTheme }: colorFunctionProps) {\n  const formBorderColor = value\n  setTheme((theme) => ({ ...theme, formBorderColor }))\n}\n\nfunction backgroundColor({ value, setTheme }: colorFunctionProps) {\n  const backgroundColor = value\n  setTheme((theme) => ({ ...theme, backgroundColor }))\n}\n\nfunction headingBackgroundColor({ value, setTheme }: colorFunctionProps) {\n  const headingBackgroundColor = value\n  setTheme((theme) => ({ ...theme, headingBackgroundColor }))\n}\nfunction headingColor({ value, setTheme }: colorFunctionProps) {\n  const headingColor = value\n  setTheme((theme) => ({ ...theme, headingColor }))\n}\n\nfunction headingBorderColor({ value, setTheme }: colorFunctionProps) {\n  const headingBorderColor = value\n  setTheme((theme) => ({ ...theme, headingBorderColor }))\n}\n\nfunction inputBackgroundColor({ value, setTheme }: colorFunctionProps) {\n  const inputBackgroundColor = value\n  setTheme((theme) => ({ ...theme, inputBackgroundColor }))\n}\n\nfunction inputBorderColor({ value, setTheme }: colorFunctionProps) {\n  const inputBorderColor = value\n  setTheme((theme) => ({ ...theme, inputBorderColor }))\n}\n\nfunction buttonFontColor({ value, setTheme }: colorFunctionProps) {\n  const buttonFontColor = value\n  setTheme((theme) => ({ ...theme, buttonFontColor }))\n}\n\nfunction buttonBackgroundColor({ value, setTheme }: colorFunctionProps) {\n  const buttonBackgroundColor = value\n  setTheme((theme) => ({ ...theme, buttonBackgroundColor }))\n}\nfunction buttonHoverColor({ value, setTheme }: colorFunctionProps) {\n  const buttonHoverColor = value\n  setTheme((theme) => ({ ...theme, buttonHoverColor }))\n}\n\nexport default {\n  primaryColor,\n  backgroundColor,\n  headingBackgroundColor,\n  inputBackgroundColor,\n  buttonFontColor,\n  buttonBackgroundColor,\n  headingColor,\n  formBorderColor,\n  headingBorderColor,\n  inputBorderColor,\n  buttonHoverColor\n}\n","import React, { FormEventHandler } from 'react'\nimport colorFunctions from './helpers/colorfunctions'\n\ntype colorComponents = {\n  name: string\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n  colorName: string\n}\n\nconst ColorComponent = ({ name, colorName, setTheme }: colorComponents) => {\n  const handleChange: FormEventHandler<HTMLInputElement> = (event) => {\n    const name = event.currentTarget.name\n    const value = event.currentTarget.value\n    colorFunctions[name]({ value, setTheme })\n  }\n\n  return (\n    <div className='colors'>\n      <p>{colorName}</p>\n      <input type='color' name={name} onChange={(e) => handleChange(e)} />\n    </div>\n  )\n}\n\nexport default ColorComponent\n","import React, { useEffect } from 'react'\nimport Prism from 'prismjs'\nimport '../styles.css'\n\ntype codeProps = {\n  theme: Theme\n  title: string\n  buttonTitle: string\n}\n\ntype Theme = {\n  primaryColor?: string\n  primaryFont?: string\n  inputBorderRadius?: string\n  inputBorder?: string\n  inputBackgroundColor?: string\n  width?: string\n  fontWeight?: string\n  buttonFontColor?: string\n  headingColor?: string\n  headingSize?: string\n  backgroundColor?: string\n  buttonBackgroundColor?: string\n  formPadding?: string\n  formBorderRadius?: string\n  headingBackgroundColor?: string\n  headingBorderRadius?: string\n  buttonPadding?: string\n  buttonLetterSpacing?: string\n  messageInputHeight?: string\n  formBorderColor?: string\n  formBorderWeight?: string\n  headingBorderBottom?: string\n  headingBorderColor?: string\n  inputBorderWeight?: string\n  inputBorderColor?: string\n}\n\nconst CodeSnippet = ({ theme, title, buttonTitle }: codeProps) => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const keys = Object.keys(theme)\n  const string = keys\n    .reduce((a, b) => {\n      if (!theme[b]) return a\n      else\n        return (\n          a +\n          `${b}: \"${theme[b]}\",\n    `\n        )\n    }, ``)\n    .trim()\n\n  const propTitle = title ? ` title=\"${title}\"` : ''\n  const propButtonTitle = buttonTitle ? ` buttonTitle=\"${buttonTitle}\"` : ''\n\n  const codeOutput = `\n  <Form theme={\n    ${string}\n    }\n  <Heading${propTitle}/>\n  <FirstName/>\n  <LastName/>\n  <Email/>\n  <Message/>\n  <SubmitButton${propButtonTitle}/>\n  />\n  `\n  return (\n    <div className='code_snippet'>\n      <pre>\n        <code>{codeOutput}</code>\n      </pre>\n    </div>\n  )\n}\n\nexport default CodeSnippet\n","import React, { FormEventHandler } from 'react'\n\ntype ButtonTitleProps = {\n  setButtonTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst ButtonTitle = ({ setButtonTitle }: ButtonTitleProps) => {\n  const handleTitleChange: FormEventHandler<HTMLInputElement> = (event) => {\n    const value = event.currentTarget.value\n    setButtonTitle(`${value}`)\n  }\n  return (\n    <div className='heading'>\n      <input\n        placeholder='Type your Button Title here!'\n        onChange={handleTitleChange}\n        type='text'\n      />\n    </div>\n  )\n}\n\nexport default ButtonTitle\n","import React from 'react'\nimport Fonts from './Fonts'\nimport RangeComponent from './RangeComponent'\nimport Title from './Title'\nimport ColorComponent from './colorComponents'\nimport CodeSnippet from './codeSnippet'\nimport ButtonTitle from './ButtonTitle'\nimport '../styles.css'\n\ntype OptionProps = {\n  setTitle: React.Dispatch<React.SetStateAction<string>>\n  setTheme: React.Dispatch<React.SetStateAction<{}>>\n  theme: any\n  title: string\n  buttonTitle: any\n  setButtonTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst OptionForm = ({\n  title,\n  theme,\n  setTitle,\n  setTheme,\n  setButtonTitle,\n  buttonTitle\n}: OptionProps) => {\n  return (\n    <div className='options'>\n      <div className='information'>\n        <h1>\n          React Customisable Contact Form <span role='img'>👑 </span>\n        </h1>\n        <h3>\n          A simple but highly customisable 'contact-me' component written in\n          Typescript with React\n        </h3>\n      </div>\n      <div className='installation'>\n        <h4>How to Install</h4>\n        <div className='installation_guide'>\n          <h3>npm install react-customisable-contact-form</h3>\n          <p>\n            follow the docs on <span className='boldtitle'>npm!</span>\n            <br /> customise your contact form below, grab the code snippet &\n            paste into your project. Enjoy your stress free, validated and\n            customisable form in seconds 🌼\n          </p>\n        </div>\n      </div>\n      <div className='form_customisation'>\n        <h4>Customise the form 🌱</h4>\n        <p> Form Font</p>\n        <Fonts setTheme={setTheme} />\n        <RangeComponent\n          min={100}\n          max={900}\n          rangeName={'Font Weight'}\n          measureUnit=''\n          name='fontWeight'\n          setTheme={setTheme}\n        />\n\n        <ColorComponent\n          name='primaryColor'\n          setTheme={setTheme}\n          colorName='Form Primary Color'\n        />\n        <RangeComponent\n          min={300}\n          max={450}\n          rangeName={'Form Width'}\n          measureUnit='px'\n          name='width'\n          setTheme={setTheme}\n        />\n        <RangeComponent\n          min={10}\n          max={75}\n          rangeName={'Form Padding'}\n          measureUnit={'px'}\n          name='formPadding'\n          setTheme={setTheme}\n        />\n        <RangeComponent\n          min={0}\n          max={5}\n          rangeName={'Form Border Weight'}\n          measureUnit={'px'}\n          name='formBorderWeight'\n          setTheme={setTheme}\n        />\n        <ColorComponent\n          name='formBorderColor'\n          setTheme={setTheme}\n          colorName='Form Border Colors'\n        />\n\n        <RangeComponent\n          min={0}\n          max={130}\n          rangeName={'Form Border Radius'}\n          measureUnit={'px'}\n          name='formBorderRadius'\n          setTheme={setTheme}\n        />\n        <ColorComponent\n          name='backgroundColor'\n          setTheme={setTheme}\n          colorName='Form Background Color'\n        />\n      </div>\n      <div className='heading_customisation'>\n        <h4>Customise your heading 🌿 </h4>\n        <p>Title</p>\n        <Title setTitle={setTitle} />\n        <ColorComponent\n          name='headingBackgroundColor'\n          setTheme={setTheme}\n          colorName='Heading Background Color'\n        />\n        <RangeComponent\n          min={0}\n          max={50}\n          rangeName={'Heading Border Radius'}\n          measureUnit={'px'}\n          name='headingBorderRadius'\n          setTheme={setTheme}\n        />\n        <RangeComponent\n          min={5}\n          max={50}\n          rangeName={'Heading Size'}\n          measureUnit='px'\n          name='headingSize'\n          setTheme={setTheme}\n        />\n        <ColorComponent\n          name='headingColor'\n          setTheme={setTheme}\n          colorName='Heading Color'\n        />\n        <RangeComponent\n          min={0}\n          max={5}\n          rangeName={'Heading Border Bottom'}\n          measureUnit={'px'}\n          name='headingBorderBottom'\n          setTheme={setTheme}\n        />\n        <ColorComponent\n          name='headingBorderColor'\n          setTheme={setTheme}\n          colorName='Heading Border Color'\n        />\n      </div>\n      <div className='input_customisation'>\n        <h4>Customise your inputs 🍃 </h4>\n        <RangeComponent\n          min={0}\n          max={50}\n          rangeName={'Input Border Radius'}\n          measureUnit={'px'}\n          name='inputBorderRadius'\n          setTheme={setTheme}\n        />\n        <RangeComponent\n          min={0}\n          max={5}\n          rangeName={'Input Border Weight'}\n          measureUnit={'px'}\n          name='inputBorderWeight'\n          setTheme={setTheme}\n        />\n        <ColorComponent\n          name='inputBorderColor'\n          setTheme={setTheme}\n          colorName='Input Border Color'\n        />\n\n        <ColorComponent\n          name='inputBackgroundColor'\n          setTheme={setTheme}\n          colorName='Input Background Color'\n        />\n      </div>\n      <div className='message_input_customisation'>\n        <h4>Customise your message input 🍀 </h4>\n        <RangeComponent\n          min={50}\n          max={200}\n          rangeName={'Message Input Height'}\n          measureUnit={'px'}\n          name='messageInputHeight'\n          setTheme={setTheme}\n        />\n      </div>\n      <div className='button_customisation'>\n        <h4>Customise your Button 🌳 </h4>\n        <p>Button Title</p>\n        <ButtonTitle setButtonTitle={setButtonTitle} />\n        <ColorComponent\n          name='buttonFontColor'\n          setTheme={setTheme}\n          colorName='Button Font Color'\n        />\n        <RangeComponent\n          min={0}\n          max={40}\n          rangeName={'Button Padding'}\n          measureUnit={'px'}\n          name='buttonPadding'\n          setTheme={setTheme}\n        />\n        <RangeComponent\n          min={0}\n          max={20}\n          rangeName={'Button Letter Spacing'}\n          measureUnit={'px'}\n          name='buttonLetterSpacing'\n          setTheme={setTheme}\n        />\n        <ColorComponent\n          name='buttonBackgroundColor'\n          setTheme={setTheme}\n          colorName='Button Background Color'\n        />\n\n        <ColorComponent\n          name='buttonHoverColor'\n          setTheme={setTheme}\n          colorName='Button Hover Color'\n        />\n      </div>\n      <div className='code'>\n        <h4>Grab Your Component 💥 </h4>\n\n        <CodeSnippet\n          title={title}\n          theme={{ ...theme }}\n          buttonTitle={buttonTitle}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default OptionForm\n","import React, { useState } from 'react'\nimport Form from 'customisable-contact-form'\nimport {\n  Heading,\n  FirstName,\n  LastName,\n  Email,\n  Message,\n  SubmitButton\n} from 'customisable-contact-form'\nimport OptionForm from './components/options'\nimport './styles.css'\n\nconst App = () => {\n  const [theme, setTheme] = useState({})\n  const [title, setTitle] = useState('')\n  const [buttonTitle, setButtonTitle] = useState('')\n\n  return (\n    <div className='website_container'>\n      <div className='demo_container'>\n        <div className='form_demo'>\n          <Form theme={theme}>\n            <Heading title={title} />\n            <FirstName />\n            <LastName />\n            <Email />\n            <Message />\n            <SubmitButton buttonTitle={buttonTitle} />\n          </Form>\n        </div>\n\n        <div className='customisation_options'>\n          <OptionForm\n            theme={theme}\n            title={title}\n            setTitle={setTitle}\n            setTheme={setTheme}\n            buttonTitle={buttonTitle}\n            setButtonTitle={setButtonTitle}\n          />\n        </div>\n      </div>\n      <div className='footer'>\n        <footer>Made with 🖤 by Ritam Verma</footer>\n        <a href='https://github.com/ritammv'>Github </a>\n        <a href='https://www.linkedin.com/in/ritammv/'>LinkedIn</a>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}